apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  labels:
    app: nginx
    tier: frontend
spec:
  selector:
    matchLabels:
      app: nginx
      tier: frontend
  template:
    metadata:
      name: frontend-pod
      labels:
        app: nginx
        tier: frontend
    spec:
      #affinity covered here
      affinity:
        #pod antiaffinity covered here
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: nginx
                  tier: frontend
              topologyKey: kubernetes.io/hostname
        #node affinity covered here
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 10
              preference:
                matchExpressions:
                  - key: speed
                    operator: In
                    values:
                      - fast
      #init cintainer covered here
      initContainers:
        - name: frontend-init-container
          image: maxpain62/alpine:netcat
          command: ["/bin/sh"]
          args:
            - -c
            - until nc -zv 13.203.200.242 3306; do echo 'connecting to db'; done
          #container level resource request limit covered here
          resources:
            limits:
              cpu: "10m"
              memory: 64Mi
            requests:
              cpu: "5m"
              memory: 32Mi
      containers:
        - name: frontend-container
          image: nginx
          ports:
            - containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: frontend-volume
              mountPath: /usr/share/nginx/html
            - name: frontend-volume-3
              mountPath: /var/log/nginx
          #liveness readiness probes covered here
          livenessProbe:
            failureThreshold: 5
            periodSeconds: 10
            initialDelaySeconds: 60
            httpGet:
              port: 80
              path: /
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 5
            initialDelaySeconds: 40
            httpGet:
              port: 80
              path: /
          #container level resource request limit covered here
          resources:
            requests:
              cpu: "125m"
              memory: 64Mi
            limits:
              cpu: "250m"
              memory: 128Mi
        #side car container covered here
        - name: frontend-sidecar-container
          image: maxpain62/ubuntu-24.04:awscli-1.42.37
          command:
            - /bin/sh
          args:
            - -c
            - cp /tmp/sync.sh /root/sync.sh; chmod 777 /root/sync.sh; while true; do bash /root/sync.sh; sleep 10s; done
          volumeMounts:
            - name: frontend-volume-2
              mountPath: /root/.aws/config
              subPath: config
            - name: frontend-volume-2
              mountPath: /root/.aws/credentials
              subPath: credentials
            - name: frontend-volume-2
              mountPath: /tmp/sync.sh
              subPath: sync.sh
            - name: frontend-volume-3
              mountPath: /var/log/nginx
          resources:
            requests:
              cpu: "10m"
              memory: 32Mi
            limits:
              cpu: "15m"
              memory: 48Mi
      volumes:
        - name: frontend-volume
          configMap:
            name: frontend-configmap
        - name: frontend-volume-2
          configMap:
            name: frontend-configmap-2
        - name: frontend-volume-3
          emptyDir: {}
